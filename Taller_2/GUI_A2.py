# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI_A2.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(594, 540)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(390, 440, 161, 71))
        self.label.setStyleSheet("border-image: url(:/cct/logo.png);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(260, 440, 121, 61))
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(40, 450, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(-1)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pushButton.setAutoFillBackground(False)
        self.pushButton.setStyleSheet("QPushButton {\n"
"    background-color: #4CAF50;   /* Verde */\n"
"    color: black;                /* Texto negro */\n"
"    font: bold 14px \"Times New Roman\"; /* Fuente */\n"
"    border: 0.5px solid #000000;   /* Borde negro */\n"
"    border-radius: 10px;         /* Bordes redondeados */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049;   /* Verde más oscuro al pasar el mouse */\n"
"}\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(50, 100, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.comboBox.setFont(font)
        self.comboBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.comboBox.setAutoFillBackground(False)
        self.comboBox.setStyleSheet("")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(210, 90, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(380, 90, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.textEdit_2.setFont(font)
        self.textEdit_2.setObjectName("textEdit_2")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(210, 60, 141, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(380, 60, 141, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(50, 60, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(80, 20, 431, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(30, 140, 531, 281))
        self.frame.setStyleSheet("QFrame {\n"
"    border: 2px solid black;\n"
"    border-radius: 10px;   /* opcional, esquinas redondeadas */\n"
"    background-color: white;  /* opcional, fondo blanco */\n"
"}\n"
"")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.frame)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(-1, -1, 531, 281))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 594, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.pushButton.clicked.connect(self.Graficar)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Sara Barreto <br/>Jeisson Avila<br/>Paola Vaquiro</span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "GRAFICAR"))
        self.comboBox.setItemText(0, _translate("MainWindow", "SENO"))
        self.comboBox.setItemText(1, _translate("MainWindow", "COSENO"))
        self.comboBox.setItemText(2, _translate("MainWindow", "TANGENTE"))
        self.comboBox.setItemText(3, _translate("MainWindow", "COTANGENTE"))
        self.comboBox.setItemText(4, _translate("MainWindow", "SECANTE"))
        self.comboBox.setItemText(5, _translate("MainWindow", "COSECANTE"))
        self.label_5.setText(_translate("MainWindow", "Valor Mínimo (π rad)"))
        self.label_6.setText(_translate("MainWindow", "Valor Máximo (π rad)"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p>Seleccione función <br/>trigonométrica:</p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt;\">Graficador de funciones trigonometricas</span></p></body></html>"))

    # ================= FUNCIÓN GRAFICAR =================
    def Graficar(self):
        try:
            vmin = float(self.textEdit.toPlainText())
            vmax = float(self.textEdit_2.toPlainText())
        except ValueError:
            return  # si no son números, no hace nada

        x = np.linspace(vmin*np.pi, vmax*np.pi, 500)
        func = self.comboBox.currentText()

        if func == "SENO":
            y = np.sin(x)
        elif func == "COSENO":
            y = np.cos(x)
        elif func == "TANGENTE":
            y = np.tan(x)
        elif func == "COTANGENTE":
            y = 1/np.tan(x)
        elif func == "SECANTE":
            y = 1/np.cos(x)
        elif func == "COSECANTE":
            y = 1/np.sin(x)
        else:
            return

        # Limpiar gráficos anteriores
        for i in reversed(range(self.verticalLayout.count())):
            widget = self.verticalLayout.itemAt(i).widget()
            if widget is not None:
                widget.setParent(None)

        # Crear figura
        fig, ax = plt.subplots()
        ax.plot(x, y)
        ax.set_title(f"Función {func}")
        ax.set_xlabel("x (rad)")
        ax.set_ylabel("y")
        ax.grid(True)

        canvas = FigureCanvas(fig)
        self.verticalLayout.addWidget(canvas)


import logo_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
